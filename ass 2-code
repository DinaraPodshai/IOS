import Foundation


// 1: FizzBuzz

print("Problem 1: FizzBuzz")
for i in 1...100 {
    if i % 3 == 0 && i % 5 == 0 {
        print("FizzBuzz")
    } else if i % 3 == 0 {
        print("Fizz")
    } else if i % 5 == 0 {
        print("Buzz")
    } else {
        print(i)
    }
}
print("\n")


// 2: Prime Numbers

print("Problem 2: Prime Numbers")

func isPrime(_ number: Int) -> Bool {
    if number < 2 { return false }
    for i in 2..<number {
        if number % i == 0 {
            return false
        }
    }
    return true
}

for i in 1...100 {
    if isPrime(i) {
        print(i, terminator: " ")
    }
}
print("\n\n")


// 3: Temperature Converter

print("Problem 3: Temperature Converter")

func celsiusToFahrenheit(_ c: Double) -> Double { return (c * 9/5) + 32 }
func celsiusToKelvin(_ c: Double) -> Double { return c + 273.15 }
func fahrenheitToCelsius(_ f: Double) -> Double { return (f - 32) * 5/9 }
func kelvinToCelsius(_ k: Double) -> Double { return k - 273.15 }

let temp = 25.0
let unit = "C"

if unit.uppercased() == "C" {
    print("Fahrenheit: \(celsiusToFahrenheit(temp))")
    print("Kelvin: \(celsiusToKelvin(temp))")
} else if unit.uppercased() == "F" {
    let celsius = fahrenheitToCelsius(temp)
    print("Celsius: \(celsius)")
    print("Kelvin: \(celsiusToKelvin(celsius))")
} else if unit.uppercased() == "K" {
    let celsius = kelvinToCelsius(temp)
    print("Celsius: \(celsius)")
    print("Fahrenheit: \(celsiusToFahrenheit(celsius))")
} else {
    print("Invalid unit")
}
print("\n")


// 4: Shopping List Manager

print("Problem 4: Shopping List Manager")

var shoppingList: [String] = []

func displayMenu() {
    print("""
    1. Add item
    2. Remove item
    3. View list
    4. Exit
    """)
}

var running = false // Поменяй на true, чтобы запустить в консоли
while running {
    displayMenu()
    print("Choose an option:")
    if let choice = readLine() {
        switch choice {
        case "1":
            print("Enter item to add:")
            if let item = readLine() {
                shoppingList.append(item)
            }
        case "2":
            print("Enter item to remove:")
            if let item = readLine(), let index = shoppingList.firstIndex(of: item) {
                shoppingList.remove(at: index)
            } else {
                print("Item not found.")
            }
        case "3":
            print("Current Shopping List: \(shoppingList)")
        case "4":
            running = false
        default:
            print("Invalid choice.")
        }
    }
}
print("\n")

// 5: Word Frequency Counter

print("Problem 5: Word Frequency Counter")

let sentence = "Hello hello world world world"
var wordCount: [String: Int] = [:]

let words = sentence.lowercased().components(separatedBy: CharacterSet.punctuationCharacters.union(.whitespaces))
for word in words where !word.isEmpty {
    wordCount[word, default: 0] += 1
}

for (word, count) in wordCount {
    print("\(word): \(count)")
}
print("\n")

// 6: Fibonacci Sequence

print("Problem 6: Fibonacci Sequence")

func fibonacci(_ n: Int) -> [Int] {
    if n <= 0 { return [] }
    if n == 1 { return [0] }
    var sequence = [0, 1]
    for i in 2..<n {
        sequence.append(sequence[i-1] + sequence[i-2])
    }
    return sequence
}

print(fibonacci(10))
print("\n")

//7: Grade Calculator

print("Problem 7: Grade Calculator")

let students = ["Alice": 85, "Bob": 72, "Charlie": 90, "Diana": 65]
let scores = Array(students.values)
let average = Double(scores.reduce(0, +)) / Double(scores.count)
let maxScore = scores.max() ?? 0
let minScore = scores.min() ?? 0

print("Average Score: \(average)")
print("Highest Score: \(maxScore)")
print("Lowest Score: \(minScore)")

for (name, score) in students {
    let status = score >= Int(average) ? "Above average" : "Below average"
    print("\(name): \(score) - \(status)")
}
print("\n")

// 8: Palindrome Checker

print("Problem 8: Palindrome Checker")

func isPalindrome(_ text: String) -> Bool {
    let filtered = text.lowercased().filter { $0.isLetter }
    return filtered == String(filtered.reversed())
}

print(isPalindrome("A man a plan a canal Panama")) // true
print(isPalindrome("Hello")) // false
print("\n")

// 9: Simple Calculator

print("Problem 9: Simple Calculator")

func add(_ a: Double, _ b: Double) -> Double { return a + b }
func subtract(_ a: Double, _ b: Double) -> Double { return a - b }
func multiply(_ a: Double, _ b: Double) -> Double { return a * b }
func divide(_ a: Double, _ b: Double) -> Double? {
    return b != 0 ? a / b : nil
}

let a = 10.0
let b = 0.0
let operation = "/"

switch operation {
case "+":
    print(add(a, b))
case "-":
    print(subtract(a, b))
case "*":
    print(multiply(a, b))
case "/":
    if let result = divide(a, b) {
        print(result)
    } else {
        print("Error: Division by zero")
    }
default:
    print("Invalid operation")
}
print("\n")

// 10: Unique Characters

print("Problem 10: Unique Characters")

func hasUniqueCharacters(_ text: String) -> Bool {
    var seen: Set<Character> = []
    for char in text {
        if seen.contains(char) {
            return false
        }
        seen.insert(char)
    }
    return true
}

print(hasUniqueCharacters("Swift"))  // true
print(hasUniqueCharacters("Hello"))  // false
